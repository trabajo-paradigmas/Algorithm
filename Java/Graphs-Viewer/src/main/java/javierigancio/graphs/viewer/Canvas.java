package javierigancio.graphs.viewer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.*;

/**
 *
 * @author Usach
 */
public class Canvas extends javax.swing.JPanel {
    
    public Node<Integer> tree = null;
    protected int R = 20;

    /**
     * Creates new form Canvas
     */
    public Canvas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(153, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 474, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D) g;
        
        int w = getWidth();
        int h = getHeight();
        
        /*g2.translate(w/2, h/2);
        g2.scale(2.0, -1.0);
        
        g2.drawLine(-w/2, 0, w/2, 0);
        g2.drawLine(0, h/2, 0, -h/2);
        
        double s = 10.0;
        
        for (int xp = -w/2; xp <= w/2; xp++)
        {
            double x = xp / s;
            double y = x * x; //funcion(x)
            int yp = (int)(y * s);
            g2.drawLine(xp, yp, xp, yp);
        }*/
        
        //todo esto se construyo afuera, y despues se 
        //hizo: canvas.function_or_tree = TREE
       
        drawTree(tree, g2, 0, w, 0, h);
    }
    
    public void drawTree(
            Node<Integer> node, 
            Graphics2D g2,
            int x1, int x2, int y1, int y2)
    {
        if (node != null)
        {
            g2.drawOval((x1+x2)/2-R, y1, 2*R, 2*R);
            g2.drawString("" + node.value, (x1+x2)/2, y1+R);
            
            if (node.left != null)
            {
                drawTree(node.left, g2, x1, (x1+x2)/2, y1 + 3*R, y2);
                g2.drawLine((x1+x2)/2, y1+2*R, (x1+x2)/4, y1+3*R);
            }
            
            if (node.right != null)
            {
                drawTree(node.right, g2, (x1+x2)/2, x2, y1 + 3*R, y2);
                g2.drawLine((x1+x2)/2, y1+2*R, 3*(x1+x2)/4, y1+3*R);
            }
        }
    }
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
